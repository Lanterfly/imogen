# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build

on:
  push:
    branches: [ "main", "milestone/*" ]
  pull_request:
    branches: [ "main", "milestone/*" ]

jobs:
  app-install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x, 22.x, 23.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
  app-test:
    runs-on: ubuntu-latest
    needs: [app-install]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x, 22.x, 23.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm test
  app-lint:
    runs-on: ubuntu-latest
    needs: [app-install]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x, 22.x, 23.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run lint
  app-run-example-job:
    runs-on: ubuntu-latest
    needs: [app-test, app-lint]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x, 22.x, 23.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: timeout 5s npm run example-job && echo "Success"
        working-directory: ./examples
  app-run-example-job-and-server:
    runs-on: ubuntu-latest
    needs: [app-test, app-lint]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x, 22.x, 23.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: timeout 5s npm run example-job-and-server && echo "Success"
        working-directory: ./examples

  docs-install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm install
        working-directory: ./docs
  docs-build:
    runs-on: ubuntu-latest
    needs: [docs-install]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm install
        working-directory: ./docs
      - run: npm run build
        working-directory: ./docs
  docs-lint:
    runs-on: ubuntu-latest
    needs: [docs-install]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - run: npm install
        working-directory: ./docs
      - run: npm run lint
        working-directory: ./docs
